INSERT INTO public.blog (id,blog_id,title,description,slug,excerpt,layout,category,tag,company_id,repo_id,author,is_delete,blog_date,status,published,published_on,created_by,"createdAt",updated_by,"updatedAt",thumbnail,publish_content,"content",is_author,is_publish_date,word_count,read_time) VALUES 
(1,'gxOShwAGrkK','article-update-test-update','sdf check save update','article-update-test-update','','classic_pro','{4,2,3}','{2}',1,1,'Squaple','Y','2021-09-26 18:30:00.000','D','N','2021-10-07 13:13:45.629',1,'2021-09-27 07:01:40.077',1,'2021-10-26 09:36:47.208','http://res.cloudinary.com/sanjayaalam/image/upload/v1632980691/C1/B1/xt99pcyw8dgdyfy3dpi2.jpg','{"time": 1633612311565, "blocks": [{"id": "iqv504oF8h", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "H4WHtNyyCU", "data": {"text": "Hey. Meet the new Editor. On this page you can see<font color=\"#0070ff\"> </font>it <font color=\"#673ab7\">in action ‚Äî try to edit this t</font>ext."}, "type": "paragraph"}, {"id": "wqUHHh_gZ5", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "rnFQAAqCJo", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "KEpgM8Jbk2", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "16BLRndlGY", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "F0jc5JgjIg", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "upB-vNgRhU", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "4IRvISi0SK", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "ll-fNrm2_b", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "Yl18yfWQ10", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "M_zX0cmCDT", "data": {}, "type": "delimiter"}, {"id": "wMuP7Wh-Dq", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "u-r89B5YEw", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "eB4L2cWaFc", "data": {"link": "https://editorjs.io/", "text": "editorjs official"}, "type": "AnyButton"}, {"id": "iVdf_QnkqQ", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}], "version": "2.22.2"}','{"time": 1635241006563, "blocks": [{"id": "iqv504oF8h", "data": {"text": "Editor.js nmn", "level": 2}, "type": "header"}, {"id": "H4WHtNyyCU", "data": {"text": "Hey. Meet the new Editor. On this page you can see<font color=\"#0070ff\"> </font>it <font color=\"#673ab7\">in action ‚Äî try to edit this t</font>ext."}, "type": "paragraph"}, {"id": "wqUHHh_gZ5", "data": {"text": "Key featuresggh", "level": 3}, "type": "header"}, {"id": "rnFQAAqCJo", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "KEpgM8Jbk2", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "16BLRndlGY", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "F0jc5JgjIg", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "upB-vNgRhU", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "au6y5wYntz", "data": {"url": "https://images.unsplash.com/photo-1494989729081-eb6f69bb1132?ixlib=rb-1.2.1&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;cs=tinysrgb&amp;w=400&amp;fit=max", "caption": "", "stretched": false, "withBorder": false, "withBackground": true}, "type": "simpleImage"}, {"id": "4IRvISi0SK", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "ll-fNrm2_b", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "Yl18yfWQ10", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "M_zX0cmCDT", "data": {}, "type": "delimiter"}, {"id": "wMuP7Wh-Dq", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "u-r89B5YEw", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "eB4L2cWaFc", "data": {"link": "https://editorjs.io/", "text": "editorjs official"}, "type": "AnyButton"}, {"id": "iVdf_QnkqQ", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(3,'jvb7o-tzGGP','Test Button  21','gdgtf','test-button-67-updat','','classic','{4,3}','{2}',1,1,'Squaple','N','2021-09-26 18:30:00.000','P','Y','2021-10-08 10:24:58.696',1,'2021-09-27 07:12:43.437',1,'2021-11-01 10:50:13.488','https://res.cloudinary.com/sanjayaalam/image/upload/v1632287841/thumbnail1_m5vija.png','{"time": 1633599368735, "blocks": [{"id": "JVpneW2UP-", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "U_XH_L92Nl", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "IKOaSAuPY0", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "yZmoFlaif1", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "2q24Ot882J", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "NYwOxMlWxD", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "BPdhURNEiR", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "2ZfEO6TG30", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "qZ2xO5v8wu", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "3HF8NJMZJj", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "9-8vTxUo5a", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "MsnSwGdq3O", "data": {}, "type": "delimiter"}, {"id": "S5ZtLgHStj", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "53gR_sxHhu", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "LZNgYn-c-y", "data": {"link": "https://editorjs.io/", "text": "editorjs official"}, "type": "AnyButton"}, {"id": "iGwGRu7Qib", "data": {"file": {}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}','{"time": 1633599368735, "blocks": [{"id": "JVpneW2UP-", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "U_XH_L92Nl", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "IKOaSAuPY0", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "yZmoFlaif1", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "2q24Ot882J", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "NYwOxMlWxD", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "BPdhURNEiR", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "2ZfEO6TG30", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "qZ2xO5v8wu", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "3HF8NJMZJj", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "9-8vTxUo5a", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "MsnSwGdq3O", "data": {}, "type": "delimiter"}, {"id": "S5ZtLgHStj", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "53gR_sxHhu", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "LZNgYn-c-y", "data": {"link": "https://editorjs.io/", "text": "editorjs official"}, "type": "AnyButton"}, {"id": "iGwGRu7Qib", "data": {"file": {}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(4,'j49o1PVkasd','test2','gfbgf','test2','','classic_pro','{2}','{2}',1,1,'Squaple','N','2021-09-26 18:30:00.000','P','Y','2021-10-04 09:11:15.750',1,'2021-09-27 07:18:11.524',1,'2021-10-11 12:43:01.901','http://res.cloudinary.com/sanjayaalam/image/upload/v1632294715/C2/B84/g0k0ewywctlpgi1jv1kn.jpg','{"time": 1633338672055, "blocks": [{"id": "niXZIiFBVl", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "6b0pwN6evu", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "ZhBSbd9Do8", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "I-C--iP3EE", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "I2hFj_uK7N", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "0nGEAyLxjX", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "CS5PcP_snF", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "DhQ5ZB9UAX", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "ou-b0WPonE", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "Pz_0jztC5r", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "9gu6pF-Mv3", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "tycheIrAQ0", "data": {}, "type": "delimiter"}, {"id": "d9o2FTy10H", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "YexbIZRlNV", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}], "version": "2.22.2"}','{"time": 1633956181830, "blocks": [{"id": "niXZIiFBVl", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "6b0pwN6evu", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "ZhBSbd9Do8", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "I-C--iP3EE", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "I2hFj_uK7N", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "0nGEAyLxjX", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "CS5PcP_snF", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "DhQ5ZB9UAX", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "ou-b0WPonE", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "Pz_0jztC5r", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "9gu6pF-Mv3", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "tycheIrAQ0", "data": {}, "type": "delimiter"}, {"id": "d9o2FTy10H", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "YexbIZRlNV", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(5,'t0RniSwDW6e','test author','vvccvc','test-author','','classic','{2}','{2}',1,1,'Squaple','N','2021-09-26 18:30:00.000','P','Y','2021-09-29 13:31:28.423',1,'2021-09-27 14:18:33.380',1,'2021-10-26 08:52:05.778','http://res.cloudinary.com/sanjayaalam/image/upload/v1632292296/C2/B84/dlhj5wh6ioehg3voktr7.jpg','{"time": 1632922283502, "blocks": [{"id": "i4TOTrV0Y9", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "5PA8Cg975-", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "wOe9fvPwXv", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "zSMG5aTnFh", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "GQXgGoRoPd", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "Ucxrgk6btW", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "3-BCeauNFO", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "Z6VTVTfzI7", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "BAXG_w-ckf", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1-1IXv5BSh", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "X1O96cACzA", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "jfa9yyWIOy", "data": {}, "type": "delimiter"}, {"id": "3blBnY3kbN", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "jdVjS3R8if", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "cMnAvMYn7P", "data": {"link": "https://editorjs.io/", "text": "editorjs official", "color": "editorjs official"}, "type": "AnyButton"}, {"id": "mLsv-AZeUg", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}], "version": "2.22.2"}','{"time": 1635238325294, "blocks": [{"id": "i4TOTrV0Y9", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "5PA8Cg975-", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "wOe9fvPwXv", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "zSMG5aTnFh", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "GQXgGoRoPd", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "Ucxrgk6btW", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "3-BCeauNFO", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "Z6VTVTfzI7", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "BAXG_w-ckf", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1-1IXv5BSh", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "X1O96cACzA", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "jfa9yyWIOy", "data": {}, "type": "delimiter"}, {"id": "3blBnY3kbN", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "jdVjS3R8if", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "cMnAvMYn7P", "data": {"link": "https://editorjs.io/", "text": "editorjs official"}, "type": "AnyButton"}, {"id": "mLsv-AZeUg", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(2,'IYFM98XGisz','check  valtio ','check publish','check-valtio','','classic pro','{4}','{1,2}',1,1,'Squaple','N','2021-09-26 18:30:00.000','D','N','2021-09-29 10:39:31.894',1,'2021-09-27 07:12:01.639',1,'2021-09-29 13:30:43.864','http://res.cloudinary.com/sanjayaalam/image/upload/v1632295754/C2/B85/r9w1p1qargl4ek3aepex.jpg','{"time": 1632911969328, "blocks": [{"id": "jN585VcqNe", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "miO0ye6qs8", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "DfdjMfYh2r", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "eKY03fXdm2", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "NEvf4AXBSv", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "Ol7LqZtFB6", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "44lfeYQwt6", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "5_2oDpy_DJ", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "Ci4OWYEMbN", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "GOqj3ra6aN", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "QNum_mkjlM", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "jIWTlFnjdI", "data": {}, "type": "delimiter"}, {"id": "ijOnFL5-YO", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "D7seIEF1-c", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "pjoAKOseZd", "data": {"link": "https://editorjs.io/", "text": "editorjs official", "color": "editorjs official"}, "type": "AnyButton"}], "version": "2.22.2"}','{"time": 1632922203832, "blocks": [{"id": "oiG7ReAUBu", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "LdTjvzdFB1", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "V7yafna3aq", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "AomcDxmmp3", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "g1Q9YsYQwE", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "Hn_E5QdxX6", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "M7qA-xKBGb", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "r5bPRFmBu5", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "1O0xNiUUzH", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "e2yoJGjEyV", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "_0q-A1EQ86", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "YUsvdm5ml_", "data": {}, "type": "delimiter"}, {"id": "qgsweKKEQz", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "HGfJ759Cka", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}, {"id": "AvIduDZVzc", "data": {"link": "https://editorjs.io/", "text": "editorjs official", "color": "editorjs official"}, "type": "AnyButton"}, {"id": "Tx3SOG6466", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(6,'PTdNP88xh2m','article 6','bcbc','article-6','','classic','{2}','{2}',1,1,'Squaple','N','2021-09-27 18:30:00.000','D','N','2021-09-29 13:58:24.609',1,'2021-09-28 10:35:49.002',1,'2021-10-01 13:57:36.184','https://res.cloudinary.com/sanjayaalam/image/upload/v1632287841/thumbnail1_m5vija.png','{"time": 1632923901785, "blocks": [{"id": "Y1-uXn4g49", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "TTtt_62ZsN", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "18-dl5vYkH", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "k0C1yrES78", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "D15Fw9u66O", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "sJlW29TsSH", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "vPLfjScFlI", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "LlUg32h28P", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "uArLsiXqNT", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "hYcpow7dzf", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "K7wU_uxPRu", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "84BsK10BUH", "data": {}, "type": "delimiter"}, {"id": "Z9FAJvVkRu", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "fmRawruXNr", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}], "version": "2.22.2"}','{"time": 1633096643646, "blocks": [{"id": "Y1-uXn4g49", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "TTtt_62ZsN", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "18-dl5vYkH", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "k0C1yrES78", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "D15Fw9u66O", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "sJlW29TsSH", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "vPLfjScFlI", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "LlUg32h28P", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "uArLsiXqNT", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "hYcpow7dzf", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "K7wU_uxPRu", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "84BsK10BUH", "data": {}, "type": "delimiter"}, {"id": "Z9FAJvVkRu", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "fmRawruXNr", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1623842374/xlxgijnrwzqg1tg0q1we.jpg"}, "caption": "", "stretched": false, "withBorder": true, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(7,'AQTIyhe9k_f','Test ','test sub title','test','','classic','{4}','{2}',1,1,'Squaple','N','2021-09-28 18:30:00.000','P','Y','2021-09-29 14:00:38.789',1,'2021-09-29 13:48:21.090',1,'2021-10-07 09:57:48.609','http://res.cloudinary.com/sanjayaalam/image/upload/v1633600657/C1/B7/to40anqrvlyn2s9ibjgc.webp','{"time": 1632924027436, "blocks": [{"id": "tU2c5l1IGD", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}, {"id": "eISM3zM1jT", "data": {"text": "Test Data&nbsp;", "level": 2}, "type": "header"}, {"id": "zcUkH3EVhr", "data": {"text": "lorium50"}, "type": "paragraph"}, {"id": "3j1Xe9nTn2", "data": {"text": "Lorem Ipsum 52", "level": 3}, "type": "header"}, {"id": "Q5DlhaMXzS", "data": {"link": "cddfdfdf", "text": "test"}, "type": "AnyButton"}, {"id": "BRRv53YHkz", "data": {"link": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "text": "test6"}, "type": "AnyButton"}], "version": "2.22.2"}','{"time": 1633070044528, "blocks": [{"id": "tU2c5l1IGD", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}, {"id": "eISM3zM1jT", "data": {"text": "Test Data&nbsp;", "level": 2}, "type": "header"}, {"id": "zcUkH3EVhr", "data": {"text": "lorium50"}, "type": "paragraph"}, {"id": "3j1Xe9nTn2", "data": {"text": "Lorem Ipsum 52", "level": 3}, "type": "header"}, {"id": "Q5DlhaMXzS", "data": {"link": "cddfdfdf", "text": "test"}, "type": "AnyButton"}, {"id": "BRRv53YHkz", "data": {"link": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "text": "test6"}, "type": "AnyButton"}, {"id": "POUUoOzHX0", "data": {"text": "Test&nbsp;"}, "type": "paragraph"}, {"id": "xr03ghwBFT", "data": {"text": "undo&nbsp;"}, "type": "paragraph"}, {"id": "orXr_vS7Tl", "data": {"text": "redo"}, "type": "paragraph"}], "version": "2.22.2"}',false,false,NULL,NULL)
,(9,'cEg8NiFr7l1','Untitled - 5mu5IqmQ_YZ','','','','Classic',NULL,NULL,1,1,'Squaple','Y','2021-10-04 04:44:47.205','D','N',NULL,1,'2021-10-04 04:44:47.203',NULL,'2021-10-04 12:13:26.965','https://res.cloudinary.com/sanjayaalam/image/upload/v1632287841/thumbnail1_m5vija.png',NULL,NULL,NULL,NULL,NULL,NULL)
,(8,'8N3HaZs6r6y','test Any button','test','test-any-button','','classic','{2}','{1}',1,1,'Squaple','N','2021-09-28 18:30:00.000','D','N','2021-10-01 09:27:02.989',1,'2021-09-29 14:03:35.327',1,'2021-10-04 09:05:08.419','http://res.cloudinary.com/sanjayaalam/image/upload/v1632988007/C1/B8/jcwoqw7o08q9t9imbg85.jpg','{"time": 1633008700913, "blocks": [{"id": "n_tgDU_cu-", "data": {"text": "Systems which can display curling quotes (with the current fonts) will do so, and practically without exception will gracefully go back to neutra", "caption": "sanjay", "alignment": "left"}, "type": "quote"}, {"id": "-H90JfPyVk", "data": {"items": ["test", "test2", "test3"], "style": "ordered"}, "type": "list"}, {"id": "LS32e7clBL", "data": {"text": "https://www.instagram.com/p/CUZ5GtN25d/?utm_medium=share_sheet"}, "type": "paragraph"}, {"id": "AvBs744gGq", "data": {"text": "https://www.instagram.com/p/CUZ5GtN25d/?utm_medium=share_sheet"}, "type": "paragraph"}, {"id": "YALIUG7Soz", "data": {"text": "https://www.instagram.com/p/CUZ5GtN25d/?utm_medium=share_sheet"}, "type": "paragraph"}, {"id": "yfwLlXci8j", "data": {"text": "https://www.instagram.com/p/CUXRo50DTN8/?utm_source=ig_web_copy_link"}, "type": "paragraph"}, {"id": "vHAWqSIclD", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}, {"id": "q0I7UaUQ0R", "data": {"embed": "https://www.instagram.com/p/CUXRo50DTN8/embed", "width": 400, "height": 505, "source": "https://www.instagram.com/p/CUXRo50DTN8/", "caption": "", "service": "instagram"}, "type": "embed"}, {"id": "A0VVXBU3nV", "data": {"embed": "https://codepen.io/andy6804tw/embed/RxwrZj?height=300&theme-id=0&default-tab=css,result&embed-version=2", "width": 600, "height": 300, "source": "https://codepen.io/andy6804tw/pen/RxwrZj", "caption": "", "service": "codepen"}, "type": "embed"}, {"id": "29d79O3B4T", "data": {"file": {"url": "http://res.cloudinary.com/sanjayaalam/image/upload/v1632996598/C789/B48/yk6vj6mprmc67caqbhe0.png", "caption": "Here is a caption field", "stretched": false, "withBorder": false, "withBackground": true}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}, {"id": "WCGo2h_AmK", "data": {"text": "<font color=\"#03a9f4\">Debounce&nbsp;</font>"}, "type": "paragraph"}, {"id": "Pg8hrOuqyA", "data": {"text": "<span style=\"background-color: rgb(76, 175, 80);\">test data dbvvvdfbdbbngfgjbnffnfnfnfnfbmffnfmfn nf f</span>"}, "type": "paragraph"}, {"id": "AmYzrd5RR1", "data": {"text": "&nbsp;tesfsff ff"}, "type": "paragraph"}], "version": "2.22.2"}','{"time": 1633101744805, "blocks": [{"id": "n_tgDU_cu-", "data": {"text": "Systems which can display curling quotes (with the current fonts) will do so, and practically without exception will gracefully go back to neutra", "caption": "sanjay", "alignment": "left"}, "type": "quote"}, {"id": "-H90JfPyVk", "data": {"items": ["test", "test2", "test3"], "style": "ordered"}, "type": "list"}, {"id": "LS32e7clBL", "data": {"text": "https://www.instagram.com/p/CUZ5GtN25d/?utm_medium=share_sheet"}, "type": "paragraph"}, {"id": "AvBs744gGq", "data": {"text": "https://www.instagram.com/p/CUZ5GtN25d/?utm_medium=share_sheet"}, "type": "paragraph"}, {"id": "YALIUG7Soz", "data": {"text": "https://www.instagram.com/p/CUZ5GtN25d/?utm_medium=share_sheet"}, "type": "paragraph"}, {"id": "yfwLlXci8j", "data": {"text": "https://www.instagram.com/p/CUXRo50DTN8/?utm_source=ig_web_copy_link"}, "type": "paragraph"}, {"id": "vHAWqSIclD", "data": {"embed": "https://www.youtube.com/embed/hHgwKEyEAEI", "width": 580, "height": 320, "source": "https://www.youtube.com/watch?v=hHgwKEyEAEI", "caption": "", "service": "youtube"}, "type": "embed"}, {"id": "q0I7UaUQ0R", "data": {"embed": "https://www.instagram.com/p/CUXRo50DTN8/embed", "width": 400, "height": 505, "source": "https://www.instagram.com/p/CUXRo50DTN8/", "caption": "", "service": "instagram"}, "type": "embed"}, {"id": "A0VVXBU3nV", "data": {"embed": "https://codepen.io/andy6804tw/embed/RxwrZj?height=300&theme-id=0&default-tab=css,result&embed-version=2", "width": 600, "height": 300, "source": "https://codepen.io/andy6804tw/pen/RxwrZj", "caption": "", "service": "codepen"}, "type": "embed"}, {"id": "29d79O3B4T", "data": {"file": {"url": "http://res.cloudinary.com/sanjayaalam/image/upload/v1632996598/C789/B48/yk6vj6mprmc67caqbhe0.png", "caption": "Here is a caption field", "stretched": false, "withBorder": false, "withBackground": true}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}, {"id": "WCGo2h_AmK", "data": {"text": "<font color=\"#03a9f4\">Debounce&nbsp;</font>"}, "type": "paragraph"}, {"id": "Pg8hrOuqyA", "data": {"text": "<span style=\"background-color: rgb(76, 175, 80);\">test data dbvvvdfbdbbngfgjbnffnfnfnfnfbmffnfmfn nf f</span>"}, "type": "paragraph"}, {"id": "AmYzrd5RR1", "data": {"text": "&nbsp;tesfsff ff"}, "type": "paragraph"}, {"id": "9M0bpYpcJU", "data": {"text": "test"}, "type": "paragraph"}, {"id": "9Im8rY_uH6", "data": {"text": "s"}, "type": "paragraph"}, {"id": "Qwr1AubOP_", "data": {"text": "dvdvdvd"}, "type": "paragraph"}], "version": "2.22.2"}',true,true,NULL,NULL)
,(10,'-oz-ei1_RU8','Untitled - lfZPsXwDVHq','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-04 12:18:23.003','D','N',NULL,1,'2021-10-04 12:18:23.000',NULL,'2021-10-04 12:29:30.588','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633350570499, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
;
INSERT INTO public.blog (id,blog_id,title,description,slug,excerpt,layout,category,tag,company_id,repo_id,author,is_delete,blog_date,status,published,published_on,created_by,"createdAt",updated_by,"updatedAt",thumbnail,publish_content,"content",is_author,is_publish_date,word_count,read_time) VALUES 
(15,'3GCol-o5NtU','Untitled - QsjpCdhvc3l','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-05 12:49:09.244','D','N',NULL,1,'2021-10-05 12:49:09.242',NULL,'2021-10-05 12:49:24.210','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633438164166, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(17,'QV-hKYLI5MA','Untitled - f8oHETzB_qT','','','','Classic','{3}','{2}',1,1,'Squaple','N','2021-10-08 10:45:56.079','D','N',NULL,1,'2021-10-08 10:45:56.076',NULL,'2021-10-08 10:48:29.591','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633689963384, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(12,'18mZyGWjWQf','Untitled - Qlx3H-JwzZy','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-04 12:38:27.772','D','N',NULL,1,'2021-10-04 12:38:27.769',NULL,'2021-10-08 04:45:45.986','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633668341188, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(16,'GaNYrESKk7l','Untitled - 6Ps-ONKl2eF','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-07 09:36:13.435','D','N',NULL,1,'2021-10-07 09:36:13.430',NULL,'2021-10-07 09:36:22.776','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633599382350, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(11,'2jAChy2vEY8','Untitled - zvA3llx-K5X','','','','Classic','{}','{2}',1,1,'Squaple','N','2021-10-04 12:30:04.377','D','N',NULL,1,'2021-10-04 12:30:04.375',NULL,'2021-10-08 11:21:25.741','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633692085223, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(14,'n5l5yWuC9Bz','Untitled - WNXIllJncZA','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-04 13:50:11.600','P','Y','2021-10-07 12:22:09.945',1,'2021-10-04 13:50:11.599',NULL,'2021-10-07 12:22:10.721','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1633609330632, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(18,'ik5_U5rSHxo','Untitled - 54JJhIOKGoJ','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-12 06:56:56.509','D','N',NULL,1,'2021-10-12 06:56:56.507',NULL,'2021-10-12 06:57:19.654','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1634021839139, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(13,'wZalxWdcyIH','Untitled - dt6yYATx--_','','','','Classic',NULL,NULL,1,1,'Squaple','N','2021-10-04 13:48:54.724','P','Y','2021-10-07 12:57:53.525',1,'2021-10-04 13:48:54.724',NULL,'2021-10-07 13:10:23.546','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png','{"time": 1633611407025, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}','{"time": 1633612223318, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(20,'N1s4aqgNnrf','Test Production','test','test-production','','classic_pro','{4}','{2}',1,1,'Squaple','N','2021-11-02 06:34:30.896','P','Y','2021-11-02 07:09:57.271',1,'2021-11-02 06:34:30.896',NULL,'2021-11-02 07:09:57.655','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png','{"time": 1635836941719, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "Yt5Umn-UsB", "data": {"url": "https://images.unsplash.com/photo-1635781837789-8c03bbcfb865?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=MnwyNjY2OTN8MHwxfGFsbHw5fHx8fHx8Mnx8MTYzNTgzNDg0Nw&amp;ixlib=rb-1.2.1&amp;q=80&amp;w=400", "caption": "", "stretched": false, "withBorder": true, "withBackground": true}, "type": "simpleImage"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}','{"time": 1635836941719, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "Yt5Umn-UsB", "data": {"url": "https://images.unsplash.com/photo-1635781837789-8c03bbcfb865?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=MnwyNjY2OTN8MHwxfGFsbHw5fHx8fHx8Mnx8MTYzNTgzNDg0Nw&amp;ixlib=rb-1.2.1&amp;q=80&amp;w=400", "caption": "", "stretched": false, "withBorder": true, "withBackground": true}, "type": "simpleImage"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
,(19,'HfWG4Na5_lD','Untitled - 7IZw-CoBlFQ','','','','Classic',NULL,NULL,1,1,'Squaple','Y','2021-11-02 06:34:04.783','D','N',NULL,1,'2021-11-02 06:34:04.783',NULL,'2021-11-02 07:32:56.063','https://res.cloudinary.com/sanjayaalam/image/upload/v1633349662/C1/B1/gieglefcwr3iu1xzjkoo.png',NULL,'{"time": 1635834853863, "blocks": [{"id": "4VvemuLPe_", "data": {"text": "Editor.js", "level": 2}, "type": "header"}, {"id": "h8ZN5wH8TV", "data": {"text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."}, "type": "paragraph"}, {"id": "bbx0slP88v", "data": {"text": "Key features", "level": 3}, "type": "header"}, {"id": "2-qYQqx0xy", "data": {"items": ["It is a block-styled editor", "It returns clean data output in JSON", "Designed to be extendable and pluggable with a simple API"], "style": "unordered"}, "type": "list"}, {"id": "i1c4zIHA5R", "data": {"text": "What does it mean ¬´block-styled editor¬ª", "level": 3}, "type": "header"}, {"id": "UxrKRvRBqf", "data": {"text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor''s Core."}, "type": "paragraph"}, {"id": "aOf1vNe5CP", "data": {"text": "There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."}, "type": "paragraph"}, {"id": "iLThl6wF1m", "data": {"text": "What does it mean clean data output", "level": 3}, "type": "header"}, {"id": "CVrQZh2H7v", "data": {"text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"}, "type": "paragraph"}, {"id": "1nM5ENS7_6", "data": {"text": "Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on."}, "type": "paragraph"}, {"id": "39VWA9Qsyz", "data": {"text": "Clean data is useful to sanitize, validate and process on the backend."}, "type": "paragraph"}, {"id": "LuYFn1IWWg", "data": {}, "type": "delimiter"}, {"id": "g-zFdDiLzy", "data": {"text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it''s core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"}, "type": "paragraph"}, {"id": "QU91eP62no", "data": {"file": {"url": "https://res.cloudinary.com/sanjayaalam/image/upload/v1623842405/ywrylwf97gcofvhmbj9r.jpg"}, "caption": "", "stretched": false, "withBorder": false, "withBackground": false}, "type": "image"}], "version": "2.22.2"}',NULL,NULL,NULL,NULL)
;